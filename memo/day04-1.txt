CREATE TABLE TBL_USER(
	NAME VARCHAR2(1000),
	AGE NUMBER
);

-- 테이블명 수정
ALTER TABLE TBL_USER RENAME TO TBL_USERS;

-- 칼럼 추가
ALTER TABLE TBL_USERS ADD(
	GENDER CHAR(1)
);
	
-- 칼럼명 수정 
ALTER TABLE TBL_USERS RENAME COLUMN NAME TO NICKNAME;

-- 칼럼 삭제
ALTER TABLE TBL_USERS DROP COLUMN GENDER;

-- 칼럼 타입 수정
ALTER TABLE TBL_USERS MODIFY (AGE VARCHAR2(20));

INSERT INTO TBL_USERS (NICKNAME, AGE)
VALUES('TEST', '22살');

TRUNCATE TABLE TBL_USERS; -- 사용시 주의!!

DELETE FROM TBL_USERS;
----------------------------------------------------------

-- 테이블 삭제
DROP TABLE TBL_USERS; 

/*
 * [실습]
 * 자동차 테이블 생성 -- CREATE
 * - 자동차 번호
 * - 브랜드
 * - 출시 날짜
 * - 색상
 * - 가격
 */ 

CREATE TABLE TBL_CAR(
	CAR_NUMBER NUMBER,
	CAR_BRAND VARCHAR2(100),
	CAR_DATE VARCHAR2(100),
	CAR_COLOR VARCHAR2(50),
	CAR_PRICE NUMBER
);

ALTER TABLE TBL_CAR MODIFY(CAR_NUMBER VARCHAR2(1000));
ALTER TABLE TBL_CAR MODIFY(CAR_DATE DATE);

-- 제약 조건 추가하기
ALTER TABLE TBL_CAR 
	ADD CONSTRAINT PK_CAR PRIMARY KEY(CAR_NUMBER); 
-- ADD CONSTRAINT : 제약 조건 추가
-- PK_CAR : 제약조건의 이름을 설정 PK_테이블명
-- PRIMARY KEY(CAR_NUMBER) : PK라는 제약조건을 (CAR_NUMBER) 칼럼에 추가한다.

-- 제약 조건 삭제
ALTER TABLE TBL_CAR DROP CONSTRAINT PK_CAR;

DROP TABLE TBL_CAR;

-- 테이블 생성시 제약조건을 추가할 수 있다.
CREATE TABLE TBL_CAR(
	CAR_NUMBER VARCHAR2(1000) CONSTRAINT PK_CAR PRIMARY KEY,
	CAR_BRAND VARCHAR2(1000),
	CAR_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER
);

CREATE TABLE TBL_CAR(
	CAR_NUMBER VARCHAR2(1000),
	CAR_BRAND VARCHAR2(1000),
	CAR_DATE DATE,
	CAR_COLOR VARCHAR2(1000),
	CAR_PRICE NUMBER,
	CONSTRAINT PK_CAR PRIMARY KEY(CAR_NUMBER)
);


SELECT * FROM TBL_CAR tc ;

/*
 * [실습]
 * 상품(PRODUCT) 테이블 생성
 * 제약조건 PK를 설정한다.
 * - 상품번호
 * - 상품이름
 * - 가격
 */

CREATE TABLE TBL_PRODUCT(
	PD_NUMBER VARCHAR2(1000),
	PD_NAME VARCHAR2(1000),
	PRICE NUMBER,
	CONSTRAINT PK_PRODUCT PRIMARY KEY(PD_NUMBER)
);

ALTER TABLE TBL_PRODUCT MODIFY(PD_NUMBER NUMBER);

INSERT INTO TBL_PRODUCT(PD_NUMBER, PD_NAME, PRICE)
VALUES(1 , '아이폰', 1000000)

-- 오류! 상품번호가 PK라서 중복 허용 X
--INSERT INTO TBL_PRODUCT(PD_NUMBER, PD_NAME, PRICE)
--VALUES(1 , '갤럭시 워치', 1000000)

-- 오류! 상품번호가 PK라서 NULL을 허용 X
--INSERT INTO TBL_PRODUCT(PD_NUMBER, PD_NAME, PRICE)
--VALUES(NULL , '삼성노트북', 2000000)

INSERT INTO TBL_PRODUCT(PD_NUMBER, PD_NAME, PRICE)
VALUES(2 , '갤럭시 Z 플맆', 1200000)

INSERT INTO TBL_PRODUCT(PD_NUMBER, PD_NAME, PRICE)
VALUES(3 , '삼성노트북', 2000000)

DELETE FROM TBL_PRODUCT
WHERE PD_NUMBER = 4

SELECT * FROM TBL_PRODUCT tp ;

-- PK는 고유한 칼럼에 많이 사용된다. EX) 아이디, 번호
SELECT * FROM TBL_PRODUCT tp
WHERE PD_NUMBER = 3;

----------------------------------------------------------
 
-- FK(FOREIGN KEY)
-- 학교테이블 , 학생테이블

CREATE TABLE TBL_SCHOOL(
	SCHOOL_ID NUMBER,
	NAME VARCHAR2(1000),
	CONSTRAINT PK_SCHOOL PRIMARY KEY(SCHOOL_ID)
);

CREATE TABLE TBL_STUDENT2(
	STUDENT_ID NUMBER,
	NAME VARCHAR2(1000),
	AGE NUMBER,
	SCHOOL_ID NUMBER, 
	CONSTRAINT PK_STUDENT PRIMARY KEY(STUDENT_ID),
	CONSTRAINT FK_STUDENT FOREIGN KEY(SCHOOL_ID) 
		REFERENCES TBL_SCHOOL(SCHOOL_ID) 
);

INSERT INTO TBL_SCHOOL
VALUES(1, 'JAVA 고등학교');

INSERT INTO TBL_SCHOOL
VALUES(2, 'DBMS 고등학교');

INSERT INTO TBL_SCHOOL
VALUES(3, 'PYTHON 고등학교');

-- 오류 발생! FK인 SCHOOL_ID에 존재하지 않는 값을 저장하려고 함
INSERT INTO TBL_STUDENT2 (STUDENT_ID, NAME, AGE, SCHOOL_ID)
VALUES(5, '김철수', 17, 100);

-- STUDENT2 에 학생추가
INSERT INTO TBL_STUDENT2 (STUDENT_ID, NAME, AGE, SCHOOL_ID)
VALUES(1, '김철수', 17, 1);

INSERT INTO TBL_STUDENT2 (STUDENT_ID, NAME, AGE, SCHOOL_ID)
VALUES(2, '박웅이', 17, 1);

INSERT INTO TBL_STUDENT2 (STUDENT_ID, NAME, AGE, SCHOOL_ID)
VALUES(3, '신짱구', 18, 2);

INSERT INTO TBL_STUDENT2 (STUDENT_ID, NAME, AGE, SCHOOL_ID)
VALUES(4, '신유리', 18, 2);

SELECT * FROM TBL_SCHOOL ts 
ORDER BY SCHOOL_ID;

SELECT * FROM TBL_STUDENT2 ts 

------------------------------------------------------------------

DROP TABLE TBL_MEMBER ;

CREATE TABLE TBL_MEMBER(
	MEMBER_ID NUMBER,
	NAME VARCHAR2(1000) NOT NULL,
	EMAIL VARCHAR2(1000),
	GENDER CHAR(1) DEFAULT 'N',
	CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID),
	CONSTRAINT UK_MEMBER UNIQUE(EMAIL),
	CONSTRAINT CK_MEMBER CHECK(GENDER IN ('M', 'F', 'N'))
);

INSERT INTO TBL_MEMBER(MEMBER_ID, NAME, EMAIL)
VALUES(1, 'TEST', 'TEST@naver.com')

-- 오류 발생! CHECK 제약조건에 위배됨!
INSERT INTO TBL_MEMBER(MEMBER_ID, NAME, EMAIL, GENDER)
VALUES(2, 'TEST2', 'TEST2@naver.com', 'A');

INSERT INTO TBL_MEMBER(MEMBER_ID, NAME, EMAIL, GENDER)
VALUES(2, 'TEST2', 'TEST2@naver.com', 'F');

INSERT INTO TBL_MEMBER(MEMBER_ID, NAME, EMAIL, GENDER)
VALUES(3, 'TEST3', 'TEST3@naver.com', 'M');

SELECT * FROM TBL_MEMBER tm ;


-------------------------------------------------------------------

-- 복합키 설정
CREATE TABLE TBL_FLOWER(
	NAME VARCHAR2(1000),
	COLOR VARCHAR2(1000),
	PRICE NUMBER,
	CONSTRAINT PK_FLOWER PRIMARY KEY(NAME, COLOR)
);

INSERT INTO TBL_FLOWER(NAME, COLOR, PRICE)
VALUES('해바라기', '노랑', 5000);

-- 오류 발생! 복합키로 설정한 2개의 칼럼이 모두 일치하면 중복처리된다. 그래서 INSERT불가
INSERT INTO TBL_FLOWER(NAME, COLOR, PRICE)
VALUES('해바라기', '노랑', 6000); -- 위에 '해바라기', '노랑' 이 중복됨 

INSERT INTO TBL_FLOWER(NAME, COLOR, PRICE)
VALUES('해바라기', '빨강', 6000);

INSERT INTO TBL_FLOWER(NAME, COLOR, PRICE)
VALUES('장미', '빨강', 7000);

SELECT * FROM TBL_FLOWER tf ;

/*
 *  
 */

DROP TABLE TBL_MEMBER;

-- 회원
CREATE TABLE TBL_MEMBER(
	MEMBER_ID NUMBER,
	LOGIN_ID VARCHAR2(1000),
	PASSWORD VARCHAR2(1000),
	CONSTRAINT PK_MEMBER PRIMARY KEY (MEMBER_ID) 
);

-- 게시판
CREATE TABLE TBL_BOARD(
	BOARD_ID NUMBER,
	TITLE VARCHAR2(1000),
	CONTENT VARCHAR2(1000),
	MEMBER_ID NUMBER,
	CONSTRAINT PK_BOARD PRIMARY KEY(BOARD_ID),
	-- FK 설정
	CONSTRAINT FK_BOARD FOREIGN KEY(MEMBER_ID) 
		REFERENCES TBL_MEMBER(MEMBER_ID)
);

INSERT INTO TBL_MEMBER(MEMBER_ID, LOGIN_ID, PASSWORD)
VALUES(1, 'AAA', '1234');
INSERT INTO TBL_MEMBER(MEMBER_ID, LOGIN_ID, PASSWORD)
VALUES(2, 'BBB', '1234');


INSERT INTO TBL_BOARD(BOARD_ID, TITLE, CONTENT, MEMBER_ID)
VALUES(1, 'TEST TITLE1', 'CONTENT1', 1);

INSERT INTO TBL_BOARD(BOARD_ID, TITLE, CONTENT, MEMBER_ID)
VALUES(2, 'TEST TITLE2', 'CONTENT2', 1);

INSERT INTO TBL_BOARD(BOARD_ID, TITLE, CONTENT, MEMBER_ID)
VALUES(3, 'TEST TITLE3', 'CONTENT3', 2);

SELECT * FROM TBL_MEMBER tm ;
SELECT * FROM TBL_BOARD tb ;

-- 댓글
CREATE TABLE TBL_COMMENT(
	COMMENT_ID NUMBER,
	CONTENT VARCHAR2(1000),
	MEMBER_ID NUMBER,
	BOARD_ID NUMBER,
	CONSTRAINT PK_COMMENT PRIMARY KEY(COMMENT_ID),
	-- FK이름은 곂치면 안되기 때문에 FK_FK명_칼럼명 으로 설정한다 -> FK_COMMENT_MEMBER 
	CONSTRAINT FK_COMMENT_MEMBER FOREIGN KEY(MEMBER_ID) 
		REFERENCES TBL_MEMBER(MEMBER_ID),
	-- FK이름은 곂치면 안되기 때문에 FK_FK명_칼럼명 으로 설정한다 -> FK_COMMENT_BOARD
	CONSTRAINT FK_COMMENT_BOARD FOREIGN KEY(BOARD_ID)   
		REFERENCES TBL_BOARD(BOARD_ID)
);

-- 중요!! COMMENT의 ERD의 사용 -> SELECT , INSERT 사용법

DELETE FROM TBL_MEMBER tm ;

INSERT INTO TBL_MEMBER
(MEMBER_ID, LOGIN_ID, PASSWORD)
VALUES(0, '', '');

INSERT INTO TBL_BOARD
(BOARD_ID, TITLE, CONTENT, MEMBER_ID)
VALUES(0, '', '', 0);
--						PK		  ,  		 FK       , FK
INSERT INTO TBL_COMMENT(COMMENT_ID, CONTENT, MEMBER_ID, BOARD_ID)
VALUES(1, '배고파', 1, 1);
--						PK		  ,  		 FK       , FK
INSERT INTO TBL_COMMENT(COMMENT_ID, CONTENT, MEMBER_ID, BOARD_ID)
VALUES(2, 'JAVA코드', 1, 2);

INSERT INTO TBL_COMMENT(COMMENT_ID, CONTENT, MEMBER_ID, BOARD_ID)
VALUES(3, '저녁 추천', 2, 1);

-- 오류! 게시판 10번째가 없기 때문에
--INSERT INTO TBL_COMMENT(COMMENT_ID, CONTENT, MEMBER_ID, BOARD_ID)
----	  				회원,게시판
--VALUES(4, '점심 추천', 1, 10);


SELECT * FROM TBL_MEMBER tm ;
SELECT * FROM TBL_BOARD tb ;

SELECT * FROM TBL_COMMENT tc 
ORDER BY COMMENT_ID;

SELECT * FROM TBL_BOARD tb 
WHERE MEMBER_ID = 1;

SELECT * FROM TBL_COMMENT tc
WHERE BOARD_ID = 1;

-------------------------------------------------------------------------

--TBL_PHONE
--===============================================
--PHONE_ID		NUMBER		PK
--COLOR			VARCHAR2(1000)
--SIZE			NUMBER
--PRICE			NUMBER
--SALE			NUMBER
--PRODUCTION_DATE	DATE
--
--TBL_PHONE_CASE
--================================================
--CASE_ID			NUMBER		PK
--COLOR			VARCHAR2(1000)
--PRICE			NUMBER
--PHONE_ID		NUMBER		FK

CREATE TABLE TBL_PHONE(
	PHONE_ID NUMBER,
	COLOR VARCHAR2(1000),
	PHONE_SIZE NUMBER,
	PRICE NUMBER,
	SALE NUMBER,
	PRODUCTION_DATE DATE,
	CONSTRAINT PK_PHONE PRIMARY KEY(PHONE_ID)
);

CREATE TABLE TBL_PHONE_CASE(
	CASE_ID NUMBER,
	COLOR VARCHAR2(1000),
	PRICE NUMBER,
	PHONE_ID NUMBER,
	CONSTRAINT PK_CASE PRIMARY KEY(CASE_ID),
	CONSTRAINT FK_CASE FOREIGN KEY(PHONE_ID)
		REFERENCES TBL_PHONE(PHONE_ID)
);

INSERT INTO TBL_PHONE(PHONE_ID, COLOR, PHONE_SIZE, PRICE, SALE, PRODUCTION_DATE)
VALUES(1, '검은색', 12, 1000000, 20, '2024-05-27');

INSERT INTO TBL_PHONE_CASE(CASE_ID, COLOR, PRICE, PHONE_ID)
VALUES(1, '핑크색', 20000, 1);

SELECT * FROM TBL_PHONE tp ;
SELECT * FROM TBL_PHONE_CASE tpc ;




CREATE TABLE TBL_MEMBER(
	MEMBER_ID		NUMBER,
	MEMBER_NAME		VARCHAR2(1000) NOT NULL,
	AGE				NUMBER NOT NULL,
	PHONE_NUMBER	VARCHAR2(1000) NOT NULL,
	ADDRESS			VARCHAR2(1000)NOT NULL,
	CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID)
);

CREATE TABLE TBL_BOOK(
	BOOK_ID			NUMBER,
	BOOK_NAME		VARCHAR2(1000) NOT NULL,
	CATEGORY		VARCHAR2(1000) 
		CHECK (CATEGORY IN('인문학', '추리','IT','로맨스')),
	MEMBER_ID		NUMBER,
	CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_ID),
	CONSTRAINT FK_MEMBER FOREIGN KEY(MEMBER_ID)
		REFERENCES TBL_MEMBER(MEMBER_ID)
);

INSERT INTO TBL_MEMBER (MEMBER_ID, MEMBER_NAME, AGE, PHONE_NUMBER, ADDRESS)
VALUES (1, '김송호', 26, '010-9205-7065', '강북구');
INSERT INTO TBL_MEMBER (MEMBER_ID, MEMBER_NAME, AGE, PHONE_NUMBER, ADDRESS) 
VALUES (2, '장희재', 33, '010-2380-2625', '노원구');

SELECT * FROM TBL_MEMBER tm ;


INSERT INTO TBL_BOOK (BOOK_ID, BOOK_NAME, CATEGORY) 
VALUES (1, '세종대왕', '인문학');
INSERT INTO TBL_BOOK (BOOK_ID, BOOK_NAME, CATEGORY) 
VALUES (2, '셜록홈즈', '추리');
INSERT INTO TBL_BOOK (BOOK_ID, BOOK_NAME, CATEGORY) 
VALUES (3, 'SQL 의 끝판왕!!', 'IT');
INSERT INTO TBL_BOOK (BOOK_ID, BOOK_NAME, CATEGORY) 
VALUES (4, '내가 좋아하는 그녀', '로맨스');


-- 회원 ID 1번 (김송호)가 책 ID 1번과 2번을 빌림
UPDATE TBL_BOOK SET MEMBER_ID = 1 WHERE BOOK_ID = 3;
UPDATE TBL_BOOK SET MEMBER_ID = 1 WHERE BOOK_ID = 4;

-- 회원 ID 2번 (장희재)가 책 ID 3번을 빌림
UPDATE TBL_BOOK SET MEMBER_ID = 2 WHERE BOOK_ID = 1;



SELECT
	MEMBER_ID ,
	BOOK_ID "책 번호",
	BOOK_NAME "책 이름", 
	CATEGORY 카테고리
FROM
	TBL_BOOK
WHERE MEMBER_ID = 1;


SELECT
	MEMBER_ID,
	BOOK_ID "책 번호",
	BOOK_NAME "책 이름", 
	CATEGORY 카테고리
FROM
	TBL_BOOK
WHERE MEMBER_ID = 2;