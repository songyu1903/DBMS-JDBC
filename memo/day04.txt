# CRUD
기본적인 데이터 처리 기능
Created(생성), Read(읽기), Update(수정), Delete(삭제)

# SQL문 (쿼리문)의 종류
SQL 명령어는 명령어 성격에 따라 분류를 할 수 있다.

1. DML(Data Manipulation Language) : 데이터 조작어
- 데이터를 조작(CRUD)하는 쿼리문
2. DDL(Data Definition Language) : 데이터 정의어
- 테이블 조작 또는 제어 관련 쿼리문(테이블 생성, 수정, 삭제 등)

3. DCL(Data Control Language) : 데이터 제어어
4. TCL (Transaction Control Language) : 트랜젝션 제어어

=================================================================
# DML
1. SELECT : 조회
2. INSERT : 추가(삽입)
INSERT INTO 테이블명(칼럼명, ....)
VALUES(값, 값, ....)

3. UPDATE : 수정

UPDATE 테이블명 
SET 칼럼명1 = 값1, 칼럼명2 = 값2, ....
WHERE 조건식

4. DELETE :  삭제
	
DELETE FROM 테이블명
WHERE 조건식	

=================================================================

TBL_MEMBER
회원번호(pk)   이름   나이   아이디
1      	      철수    22     CJ
2      	      영희    25     YH
3     	      웅이    27     WO

TBL_BOARD
게시물번호(PK)   제목   	내용      		회원번호(FK)
1    	         ㅎㅇ   	ㅎㅇㅎㅇ      	1
2      	         너무 덥다   	날씨가 덥다  	1
3     	         오늘은   	늦잠을 잤다. 	2


# 제약조건
1. PRIMARY KEY(PK) : 기본키
- 고유한 값이며, 각 행의 구분점으로 사용된다.
- 중복이 없고 NULL 값을 허용하지 않는다.
- 하나의 테이블에는 하나의 PK만 허용한다.

2. FOREIGN KEY(FK) : 외래키
- 다른 테이블의 PK를 사용하며, 중복이 가능하다.
- 보통 테이블끼리 관계를 맺을 때 사용한다.
- NULL을 허용한다.

3. UNIQUE KEY (UK) : 고유키
- NULL은 허용하지만 중복을 허용하지 않는다 

4. NOT NULL
- NULL을 허용하지 않는다.

5. DEFAULT 값
- 해당 칼럼에 값을 삽입하지 않으면 디폴트로 설정한 값이 들어간다.

6. CHECK(칼럼명 IN(값1, 값2, 값3, ....))
- 해당 칼럼에 특정 값만 허용하고 싶을 때 사용하는 제약조건

# 복합키
- 두 개 이상의 칼럼을 하나의 KEY로 지정하는 방식
- 테이블에 한 개의 PK만 존재할 수 있다.
- 복합키를 사용하면 두 개 이상의 칼럼을 하나의 PK로 사용하는 것이다.

# DDL
1. CREATE : 생성

CREATE TABLE 테이블명(
	칼럼명 자료형 [제약 조건] -> 제약 조건은 생략 가능,
	....
);

2. DROP : 삭제

DROP TABLE 테이블명;  -> 테이블 삭제

3. ALTER : 수정

ALTER TABLE 테이블명
- 테이블명 수정 : RENAME TO 새로운_테이블명;
- 칼럼 추가 : ADD(새로운_칼럼명 자료형);
- 칼럼명 수정 : RENAME COLUMN 기존_칼럼명 TO 새로운_칼럼명;
- 칼럼 삭제 : DROP COLUMN 칼럼명;
- 칼럼 타입 수정: MODIFY(칼럼명 자료형);

4. TRUNCATE : 테이블 내용 전체 삭제

TRUNCATE TABLE 테이블명;

# 무결성 : 데이터에 결함이 없다
- 데이터의 정확성, 일관성, 유효성이 유지되는것

# 무결성을 판단하는 3가지 속성
1. 정확성 : 데이터가 애매(모호)하지 않아야 한다. 
2. 일관성 : 각 사용자가 일관된 데이터를 볼 수 있도록 해야한다.
3. 유효성 : 데이터가 실제 존재하는 데이터야 한다.

# 무결성의 3가지 종류
1. 개체 무결성 : 모든 테이블이 PK로 선택된 칼럼을 가져야한다
2. 참조 무결성 : 두 테이블의 데이터가 항상 일관된 값을 가지도록 유지하는 것  -> (FK)(PK)안에 있는 칼럼이 일관되었는지
3. 도메인 무결성 : 칼럼의 타입, NULL값의 허용 등에 대한 사항을 올바르게 정의하고
	           올바른 데이터가 입력되었는 지를 확인하는것


# 모델링(기획)
1. 요구 사항 분석 
	- 회원, 주문, 상품 3가지를 관리하고자 한다.
2. 개념적 설계(개념 모델링)
회원		주문		상품
========================================================
회원번호		주문번호		상품번호
아이디		주문날짜		상품명
비밀번호				가격
이름				재고량
주소
이메일
생일

3. 논리적 설계(논리 모델링)
회원		주문		상품
========================================================
회원번호(PK)	주문번호(PK)	상품번호(PK)
아이디(NOTNULL)	주문날짜		상품명
비밀번호(NOTNULL)	회원번호(FK)	가격
이름		상품번호(FK)	재고량
주소
이메일(UK)
생일

4. 물리적 설계(물리 모델링)
TBL_USER
=========================================================
USER_ID 		VARCHAR2(1000)	 PK
PASSWORD 	VARCHAR2(1000)
NAME 		VARCHAR2(1000)
ADDRESS 	VARCHAR2(1000)
EMAIL 		VARCHAR2(1000) 	UK
BIRTH 		DATE

5. 구현 


=========================================================

1. 요구 사항
- 핸드폰과 핸드폰 케이스를 판매한다. -> 핸드폰 테이블, 핸드폰 케이스 테이블
- 핸드폰을 구매하면 핸드폰 케이스도 같이 구매한다.
- 핸드폰은 제품번호, 색상, 사이즈, 가격, 제조일, 할인율
- 케이스는 제품번호, 색상, 가격
- 핸드폰은 특정 케이스만 같이 구입할 수 있다.

2. 개념적 설계
폰		케이스
=============================================
제품번호		제품번호
색상		색상
사이즈		가격
가격
제조일
할인율

3. 논리적 설계
폰		케이스
=============================================
제품번호(PK)	제품번호(PK)
색상		색상
사이즈		가격
가격		폰_제품번호(FK)
제조일
할인율

4. 물리적 설계
TBL_PHONE
===============================================
PHONE_ID		NUMBER		PK
COLOR			VARCHAR2(1000)
SIZE			NUMBER
PRICE			NUMBER
SALE			NUMBER
PRODUCTION_DATE	DATE

TBL_PHONE_CASE
================================================
CASE_ID			NUMBER		PK
COLOR			VARCHAR2(1000)
PRICE			NUMBER
PHONE_ID		NUMBER		FK

5. 구현

TBL_PHONE
===============================================
PHONE_ID		NUMBER		PK
COLOR			VARCHAR2(1000)
SIZE			NUMBER
PRICE			NUMBER
SALE			NUMBER
PRODUCTION_DATE	DATE

TBL_PHONE_CASE
================================================
CASE_ID			NUMBER		PK
COLOR			VARCHAR2(1000)
PRICE			NUMBER
PHONE_ID		NUMBER		FK



1.요구사항 분석
도서관에서 회원의 정보와 책의 정보가 필요하다.
회원의 정보는 회원번호, 이름, 나이, 핸드폰 번호, 주소가 필요하고
책의 정보는 도서번호, 책이름, 카테고리가 필요하다.
단, 카테고리는 인문학, 추리, IT, 로맨스만 가능하다.
한 명의 회원은 여러권의 책을 빌릴 수 있다.
테이블 명 TBL_MEMBER, TBL_BOOK

2. 개념 모델링
회원		책
=========================================
회원번호		도서번호
이름		책이름
나이		카테고리(인문학, 추리, IT, 로맨스)
핸드폰 번호
주소


3. 논리 모델링
회원		책
=========================================
회원번호(PK)	도서번호(PK)
이름		책이름
나이		카테고리(인문학, 추리, IT, 로맨스)
핸드폰 번호	회원_회원번호(FK)
주소

4. 물리 모델링
TBL_MEMBER
==============================================
MEMBER_ID		NUMBER		PK
MEMBER_NAME		VARCHAR2(1000)
AGE			NUMBER
PHONE_NUMBER		VARCHAR2(1000)
ADDRESS			VARCHAR2(1000)

TBL_BOOK
===============================================
BOOK_ID			NUMBER		PK
BOOK_NAME		VARCHAR2(1000)
CATEGORY		VARCHAR2(1000)
MEMBER_ID		NUMBER		FK


5. 구현













